#!/bin/bash

# Script de migration complète vers l'API TypeScript
# Ce script remplace l'API JavaScript legacy par l'API générée depuis TypeScript

set -e

echo "🚀 Migration vers l'API TypeScript..."

# 1. Sauvegarder les fichiers JS legacy
echo "📦 Sauvegarde des fichiers JavaScript legacy..."
mkdir -p legacy/js
cp *.js legacy/js/ 2>/dev/null || echo "Aucun fichier JS à sauvegarder à la racine"

# 2. Construire l'API TypeScript
echo "🔨 Construction de l'API TypeScript..."
npm run build-all

# 3. Vérifier que les fichiers de sortie existent
if [ ! -f "dist/src/main.js" ]; then
    echo "❌ Erreur: dist/src/main.js n'existe pas après la construction"
    exit 1
fi

# 4. Créer des liens symboliques vers l'API générée (optionnel)
echo "🔗 Création de liens vers l'API générée..."

# Créer un nouveau index.js qui réfère à l'API compilée
cat > index.js << 'EOF'
/**
 * SocketCAN Neon Rust - JavaScript API
 * 
 * This file is automatically generated from TypeScript sources.
 * Do not edit this file directly - edit the TypeScript sources in src/ instead.
 * 
 * To regenerate this API: npm run generate-js
 */

// Forward to the compiled TypeScript API
module.exports = require('./dist/src/main.js');
EOF

# 5. Créer un wrapper pour exemple.js si nécessaire
if [ -f "legacy/js/exemple.js" ]; then
    echo "📝 Création du wrapper pour exemple.js..."
    cat > exemple.js << 'EOF'
/**
 * Example usage - forwarded to TypeScript-compiled version
 * 
 * This file forwards to the compiled TypeScript example.
 * For development, use: npm run example-dev
 */

// Forward to the compiled TypeScript example
require('./dist/src/exemple.js');
EOF
fi

# 6. Validation
echo "✅ Validation de l'API..."
node -e "
const SocketCAN = require('./index.js');
console.log('✓ SocketCAN class imported successfully');
console.log('✓ Version:', require('./package.json').version);
console.log('✓ Main entry point:', require('./package.json').main);
"

echo ""
echo "🎉 Migration terminée avec succès !"
echo ""
echo "📋 Résumé:"
echo "  • Fichiers JavaScript legacy sauvegardés dans legacy/js/"
echo "  • API JavaScript générée depuis TypeScript dans dist/src/"
echo "  • Point d'entrée principal: dist/src/main.js"
echo "  • Wrapper de compatibilité: index.js"
echo ""
echo "🔧 Commandes utiles:"
echo "  • npm run generate-js    - Régénérer l'API JavaScript"
echo "  • npm run test           - Tester avec l'API générée"
echo "  • npm run example        - Exécuter l'exemple compilé"
echo "  • npm run dev            - Mode développement"
echo ""
