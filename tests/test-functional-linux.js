#!/usr/bin/env node

/**
 * Test fonctionnel sur Linux avec interface CAN
 */

console.log("üöÄ Test fonctionnel SocketCAN sur Linux");

async function testSocketCAN() {
  try {
    // Chargement du module
    console.log("\n1Ô∏è‚É£  Chargement du module...");
    const SocketCAN = require("../dist/src/main");
    console.log("   ‚úÖ Module charg√©");

    // Test de cr√©ation de socket
    console.log("\n2Ô∏è‚É£  Cr√©ation de socket...");
    const socket = new SocketCAN.SocketCAN();
    console.log("   ‚úÖ Socket cr√©√©");

    // Test de bind (peut √©chouer selon l'interface disponible)
    console.log("\n3Ô∏è‚É£  Test de bind...");

    const interfaces = ["vcan0", "can0"];
    let bindSuccess = false;

    for (const iface of interfaces) {
      try {
        console.log(`   üîÑ Tentative bind sur ${iface}...`);
        socket.bind(iface);
        console.log(`   ‚úÖ Bind r√©ussi sur ${iface}`);
        bindSuccess = true;
        break;
      } catch (error) {
        console.log(`   ‚ö†Ô∏è  ${iface}: ${error.message}`);
      }
    }

    if (!bindSuccess) {
      console.log(
        "   üí° Aucune interface disponible - test de validation uniquement"
      );
    }

    // Test de validation de trames (fonctionne sans interface)
    console.log("\n4Ô∏è‚É£  Validation de trames...");

    const testFrame = {
      id: 0x123,
      data: [0x01, 0x02, 0x03, 0x04],
    };

    // Validation c√¥t√© JavaScript
    if (typeof testFrame.id === "number" && Array.isArray(testFrame.data)) {
      console.log("   ‚úÖ Structure de trame valide");
    }

    if (bindSuccess) {
      try {
        // Test d'envoi (peut √©chouer selon l'√©tat de l'interface)
        console.log("\n5Ô∏è‚É£  Test d'envoi...");
        socket.send(testFrame);
        console.log("   ‚úÖ Envoi r√©ussi");
      } catch (error) {
        console.log(`   ‚ö†Ô∏è  Envoi √©chou√©: ${error.message}`);
      }
    }

    // Nettoyage
    console.log("\n6Ô∏è‚É£  Nettoyage...");
    socket.close();
    console.log("   ‚úÖ Socket ferm√©");

    console.log("\nüéâ Tests fonctionnels termin√©s avec succ√®s !");
    console.log("üí° Le module SocketCAN fonctionne sur Linux");
  } catch (error) {
    console.error("‚ùå Erreur lors du test:", error.message);
    console.error("Stack:", error.stack);
    process.exit(1);
  }
}

testSocketCAN();
